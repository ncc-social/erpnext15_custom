[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2023-10-30 10:51:07.085762",
  "module": "Erpnext15 Custom",
  "name": "Employee-Form",
  "script": "frappe.ui.form.on(\"Employee\", {\n\trefresh(frm) {\n\t\tlet duration = moment.duration(moment().diff(cur_frm.doc.date_of_birth));\n        const formatDuration = (duration) => {\n            let years = duration.years();\n            let months= duration.months();\n            let days= duration.days();\n            let result = '';\n            if (years === 1) {\n                result += '1 year ';\n            } else if (years > 1) {\n                result += years + ' years ';\n            }\n            if (months === 1) {\n                result += '1 month ';\n            } else if (months > 1) {\n                result += months + ' months ';\n            }\n            if (days === 1) {\n                result += '1 day ';\n            } else if (days > 1) {\n                result += days + ' days ';\n            }\n            return result;\n        }\n        \n        cur_frm.set_value(\"age\", formatDuration(duration));\n        cur_frm.add_fetch('reports_to',  'employee_name',  'reports_to_name');\n        \n\t}\n\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Vehicle",
  "enabled": 1,
  "modified": "2023-10-30 10:52:29.699334",
  "module": "Erpnext15 Custom",
  "name": "Vehicle-Form",
  "script": "frappe.ui.form.on('Vehicle', {\n\trefresh(frm) {\n\t\tcur_frm.add_fetch('employee', 'employee_name', 'employee_name');\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Leave Application",
  "enabled": 1,
  "modified": "2023-10-30 10:53:06.602750",
  "module": "Erpnext15 Custom",
  "name": "Leave Application-List",
  "script": "frappe.listview_settings['Leave Application'] = frappe.listview_settings['Leave Application'] || {};\nfrappe.listview_settings['Leave Application'] = {\n    // add fields to fetch\n    add_fields: ['employee_name', 'leave_type', 'from_date', 'to_date', 'status'],\n    \n    hide_name_column: true, // hide the last column which shows the `name`\n    \n    // add a custom button for each row\n    button: {\n        show(doc) {\n            return doc.docstatus == 1;\n        },\n        get_label() {\n            return 'View';\n        },\n        get_description(doc) {\n            //return __('View {0}', [`${doc.name}`])\n            return __('View Details')\n        },\n        action(doc) {\n            frappe.set_route('Form', 'Leave Application', doc.name);\n        }\n    }\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Leave Application",
  "enabled": 1,
  "modified": "2023-11-26 14:00:27.862833",
  "module": "Erpnext15 Custom",
  "name": "Leave Application-Form",
  "script": "// cur_frm.add_fetch('employee',  'branch',  'branch');\nfrappe.ui.form.on(\"Leave Application\", {\n    onload: function(frm) {\n        // Execute your JavaScript code here\n\n        // Example: Hide the \"Expired Leaves\" column\n        hideExpiredLeavesColumn();\n    },\n    employee: function(frm) {\n        // Execute your JavaScript code here\n\n        // Example: Hide the \"Expired Leaves\" column\n        hideExpiredLeavesColumn();\n    },\n    from_date: function(frm) {\n        // Execute your JavaScript code here\n\n        // Example: Hide the \"Expired Leaves\" column\n        hideExpiredLeavesColumn();\n    },\n    to_date: function(frm) {\n        // Execute your JavaScript code here\n\n        // Example: Hide the \"Expired Leaves\" column\n        hideExpiredLeavesColumn();\n    },\n    // before_workflow_action: function (frm, action) {\n    //     if (frm.selected_workflow_action == 'Reject') {\n    //         frappe.prompt([\n    //             {\n    //                 fieldname: 'reject_reason',\n    //                 label: 'Reason for rejection',\n    //                 fieldtype: 'Small Text',\n    //                 reqd: 1,\n    //             },\n    //         ], function (values) {\n    //             if (values.reject_reason.trim() !== '') {\n    //                 // Save the rejection reason to the document\n    //                 frm.set_value('rejection_reason', values.reject_reason);\n\n    //                 // Continue with the workflow action\n    //                 frm.workflow_state = action;\n    //                 frm.save('Cancel');\n    //             } else {\n    //                 frappe.msgprint(__('Please provide a reason for rejection.'));\n    //                 frappe.ui.form.on('Leave Application', {\n    //                     validate: function(frm) {\n    //                         frm.savecancel();\n    //                     }\n    //                 });\n    //             }\n    //         }, 'Rejection Reason');\n\n    //         // Return false to prevent the default workflow action\n    //         return false;\n    //     }\n    // }\n    refresh: (frm) => {\n        // Add a custom button for the \"Reject\" action\n        if (frm.doc.workflow_state.includes(\"Sent to\")) {\n            frm.page.add_action_item(__('Reject'), () => {\n                frappe.confirm(\n                    \"<b>Are you sure you want to reject this leave application?</b>\",\n                    () => {\n                        frappe.prompt([\n                            {\n                                fieldname: 'reject_reason',\n                                label: 'Reason for rejection',\n                                fieldtype: 'Small Text',\n                                reqd: 1,\n                            },\n                        ], (values) => {\n                            // Save the rejection reason to the document\n                            frm.set_value('rejection_reason', values.reject_reason);\n                            console.log(frm.workflow_state);\n                            frm.set_value('status', 'Rejected');\n                            frm.set_value('workflow_state', 'Leave REJECTED');\n                            console.log(frm.workflow_state);\n                            frm.save().then(() => {\n                                frappe.show_alert(\"Document rejected successfully\", 5);\n                            });\n                        }, 'Rejecting ' + frm.doc.leave_type + ' application');\n                    }\n                );\n            }).css({\"color\":\"red\"});\n        }\n    }\n\n});\n\n\n\nfunction hideExpiredLeavesColumn() {\n    // Get the table and hide the third column\n    var table = $('.form-dashboard-section').find('table');\n    table.find('th:contains(\"Expired Leaves\"), td:nth-child(3), th:nth-child(3)').hide();\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Leave Application",
  "enabled": 0,
  "modified": "2023-10-30 10:55:22.265658",
  "module": "Erpnext15 Custom",
  "name": "Send SMS for Leave Application",
  "script": "frappe.ui.form.on(\"Leave Application\", \"on_submit\", function(frm, cdt, cdn) {\n\tvar message = \"\";\n\tif (frm.doc.workflow_state == \"Leave REJECTED\") {\n\t\tmessage = 'Your leave application for ' + frm.doc.total_leave_days + ' days has been REJECTED';\n\t} else if (frm.doc.workflow_state == \"Leave APPROVED\") {\n\t\tmessage = 'Your leave application for ' + frm.doc.total_leave_days + ' days has been APPROVED';\n\t}\n\tfrappe.call({\n\t\tmethod: \"frappe.core.doctype.sms_settings.sms_settings.send_sms\",\n\t\targs: {\n\t\t\treceiver_list: [frm.doc.cell_number],\n\t\t\tmsg: message,\n\t\t},\n\t\tcallback: function(r) {\n\t\t\tif (r.exc) {\n\t\t\t\tmsgprint(r.exc);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t});\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2023-11-24 17:14:41.185923",
  "module": "Erpnext15 Custom",
  "name": "Employee Folio Number",
  "script": "frappe.ui.form.on('Employee', {\n\trefresh: function(frm) {\n\t\tvar text = frm.doc.employee_number;\n\n        // Use a regular expression to extract \"JD\" or \"SD\" followed by numbers and \"/\"\n        var match = text.match(/(JD|SD)(\\d+)\\/(\\d+)/);\n\n        if (match) {\n            var extractedValue = match[1] + match[3];\n            frm.set_value('folio_number', extractedValue);\n        } else {\n            console.log(\"Pattern not found.\");\n        }\n\t}\n})",
  "view": "Form"
 }
]